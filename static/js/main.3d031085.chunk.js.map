{"version":3,"sources":["Components/ContentButtons/PlaylistButton.js","Components/SpotifyGetPlaylists/SpotifyGetPlaylists.js","Components/ContentButtons/PodcastsButton.js","Components/SpotifyGetPodcasts/SpotifyGetPodcasts.js","Components/Playback/PlaybackContainer.js","Components/Playback/Playback.js","WebPlayback.jsx","Login.js","App.js","index.js"],"names":["PlaylistButton","data","_jsx","_Fragment","children","className","id","onClick","title","SpotifyWebApi","require","SpotifyGetPlaylists","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","playlists","setPlaylists","spotifyApi","_getToken","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","setAccessToken","access_token","stop","apply","arguments","getToken","_jsxs","getMe","then","userData","console","log","body","err","getUserPlaylists","display_name","playlistData","items","map","item","name","playlistID","play","context_uri","concat","catch","PodcastButton","SpotifyGetPodcasts","token","setToken","setData","useEffect","axios","get","headers","Authorization","error","episode","PlaybackContainer","Playback","getMyCurrentPlaybackState","is_playing","track","album","images","url","artists","WebPlayback","props","is_paused","setPaused","is_active","setActive","_useState5","undefined","_useState6","player","setPlayer","_useState7","_useState8","current_track","setTrack","script","document","createElement","src","async","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","cb","volume","addListener","_ref","device_id","_ref2","state","track_window","paused","getCurrentState","connect","alt","previousTrack","togglePlay","nextTrack","Login","href","App","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d031085.chunk.js","sourcesContent":["import \"./ContentButton.css\"\nimport React, { useEffect, useState } from \"react\";\n\nconst PlaylistButton = (data) => {\n  // const [is_active, setActive] = useState(false);\n\n  // const startPlaylist = () => {\n  //   //console.log(data.id)\n  //   console.log(data)\n  //   data.play()\n  // };\n\n  // console.log(\"new button created\")\n  // console.log(data)\n\n  // console.log(data)\n\n\n\n\n    return (\n    <>\n      <button className=\"content-button\" id={data.id} onClick={data.onClick}>{data.title}</button>\n    </>\n  );\n};\n\nexport default PlaylistButton;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PlaylistButton from \"../ContentButtons/PlaylistButton\";\nconst dotenv = require('dotenv');\nvar SpotifyWebApi = require('spotify-web-api-node');\n\nconst SpotifyGetPlaylists = () => {\n  const [user, setUser] = useState(\"\");\n  const [playlists, setPlaylists] = useState([])\n\n  //create a new instance of spotify API\n  var spotifyApi = new SpotifyWebApi({\n\n    });\n\n  //function to call the server and set the token\n  async function getToken() {\n    const response = await fetch('/auth/token');\n    const json = await response.json();\n    spotifyApi.setAccessToken(json.access_token);\n  }\n  //call the function and get the token\n  getToken();\n\n//  // Get the authenticated user\n\n  \n\n\n  const handleGetPlaylists = () => {\n        // Get the authenticated user\n          spotifyApi.getMe()\n           .then(function(userData) {\n              console.log('Some information about the authenticated user', userData.body);\n              setUser(userData.body)\n          }, function(err) {\n              console.log('Something went wrong!', err);\n          });\n\n          console.log('usestate user=', user)\n\n          // Get a user's playlists\n          spotifyApi.getUserPlaylists(user.display_name)\n            .then(function(playlistData) {\n              console.log('Retrieved playlists', playlistData.body);\n              setPlaylists(playlistData.body)\n            },function(err) {\n              console.log('Something went wrong!', err);\n            });\n\n        }\n\n\n        const startPlaylist = (playlistID) => {\n          // console.log(playlistID)\n          spotifyApi.play({context_uri: `spotify:playlist:${playlistID}`})\n          .then(() => {\n            console.log('Playback started');\n          })\n          .catch(err => {\n            console.log('Something went wrong!', err);\n          });\n        }\n\n  return (\n    <div>\n      <button onClick={handleGetPlaylists}>Get Playlists</button>\n      {playlists?.items ? playlists.items.map((item) => <PlaylistButton title={item.name} id={item.id} key={item.id} onClick={() => startPlaylist(item.id)}></PlaylistButton>) : null}\n    </div>\n  );\n};\n\nexport default SpotifyGetPlaylists;","import \"./ContentButton.css\"\n\nconst PodcastButton = (data) => {\n    return (\n    <>\n      <button className=\"content-button\">{data.children}</button>\n    </>\n  );\n};\n\nexport default PodcastButton;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PodcastButton from \"../ContentButtons/PodcastsButton\";\nconst PODCASTS_ENDPOINT = \"https://api.spotify.com/v1/me/episodes\";\n\nconst SpotifyGetPodcasts = () => {\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState({});\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"accessToken\")) {\n  //     setToken(localStorage.getItem(\"accessToken\"));\n  //   }\n  // }, []);\n\n    //use effect to get token from server\n    useEffect(() => {\n\n      async function getToken() {\n        const response = await fetch('/auth/token');\n        const json = await response.json();\n        setToken(json.access_token);\n      }\n  \n      getToken();\n    }, []);\n\n  const handleGetPodcasts = () => {\n    axios\n      .get(PODCASTS_ENDPOINT, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data);\n        //console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <button onClick={handleGetPodcasts}>Get Podcasts</button>\n      {data?.items ? data.items.map((item) => <PodcastButton>{item.episode.name}</PodcastButton>) : null}\n    </>\n  );\n};\n\nexport default SpotifyGetPodcasts;","import \"./Playback.css\"\nimport React, { useEffect, useState } from \"react\";\n\n\nconst PlaybackContainer = (data) => {\n\n  \n    return (\n    <>\n      <div className=\"playback-container\">\n         Hello world\n      </div>\n    </>\n  );\n};\n\nexport default PlaybackContainer;","import React, { useEffect, useState } from \"react\";\nimport PlaybackContainer from \"./PlaybackContainer\";\nvar SpotifyWebApi = require('spotify-web-api-node');\n\nconst Playback = () => {\n  const [user, setUser] = useState(\"\");\n\n  //create a new instance of spotify API\n  var spotifyApi = new SpotifyWebApi({\n\n    });\n\n  //function to call the server and set the token\n  async function getToken() {\n    const response = await fetch('/auth/token');\n    const json = await response.json();\n    spotifyApi.setAccessToken(json.access_token);\n  }\n  //call the function and get the token\n  getToken();\n\n//  // Get the authenticated user\n\n  const showCurrentPlayback = () => {\n        // Get the authenticated user\n          spotifyApi.getMe()\n           .then(function(userData) {\n              console.log('Some information about the authenticated user', userData.body);\n              setUser(userData.body)\n          }, function(err) {\n              console.log('Something went wrong!', err);\n          });\n\n            // Get Information About The User's Current Playback State\n                spotifyApi.getMyCurrentPlaybackState()\n                    .then(function(data) {\n                // Output items\n                    if (data.body && data.body.is_playing) {\n                    console.log(\"User is currently playing something!\");\n                    console.log(data.body)\n                } else {\n                console.log(\"User is not playing anything, or doing so in private.\");\n                }\n            }, function(err) {\n                console.log('Something went wrong!', err);\n            });        }\n\n\n  return (\n    <div>\n        <button onClick={showCurrentPlayback}>Playback</button>\n        <PlaybackContainer/>\n\n    </div>\n     \n\n  );\n};\n\nexport default Playback;","import React, { useState, useEffect } from 'react';\nimport SpotifyGetPlaylists from './Components/SpotifyGetPlaylists/SpotifyGetPlaylists';\nimport SpotifyGetPodcasts from './Components/SpotifyGetPodcasts/SpotifyGetPodcasts';\nimport Playback from './Components/Playback/Playback';\n\nconst track = {\n    name: \"\",\n    album: {\n        images: [\n            { url: \"\" }\n        ]\n    },\n    artists: [\n        { name: \"\" }\n    ]\n}\n\nfunction WebPlayback(props) {\n\n    const [is_paused, setPaused] = useState(false);\n    const [is_active, setActive] = useState(false);\n    const [player, setPlayer] = useState(undefined);\n    const [current_track, setTrack] = useState(track);\n\n    useEffect(() => {\n\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n\n            const player = new window.Spotify.Player({\n                name: 'Gym Pal V2',\n                getOAuthToken: cb => { cb(props.token); },\n                volume: 0.5\n            });\n\n            setPlayer(player);\n\n            player.addListener('ready', ({ device_id }) => {\n                console.log('Ready with Device ID', device_id);\n            });\n\n            player.addListener('not_ready', ({ device_id }) => {\n                console.log('Device ID has gone offline', device_id);\n            });\n\n            player.addListener('player_state_changed', ( state => {\n\n                if (!state) {\n                    return;\n                }\n\n                setTrack(state.track_window.current_track);\n                setPaused(state.paused);\n\n                player.getCurrentState().then( state => { \n                    (!state)? setActive(false) : setActive(true) \n                });\n\n            }));\n\n            player.connect();\n\n        };\n    }, []);\n\n    if (!is_active) { \n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n                        <b> Instance not active. Transfer your playback using your Spotify app </b>\n                    </div>\n                </div>\n            </>)\n    } else {\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n\n                        <img src={current_track.album.images[0].url} className=\"now-playing__cover\" alt=\"\" />\n\n                        <div className=\"now-playing__side\">\n                            <div className=\"now-playing__name\">{current_track.name}</div>\n                            <div className=\"now-playing__artist\">{current_track.artists[0].name}</div>\n\n                            <button className=\"btn-spotify\" onClick={() => { player.previousTrack() }} >\n                                &lt;&lt;\n                            </button>\n\n                            <button className=\"btn-spotify\" onClick={() => { player.togglePlay() }} >\n                                { is_paused ? \"PLAY\" : \"PAUSE\" }\n                            </button>\n\n                            <button className=\"btn-spotify\" onClick={() => { player.nextTrack() }} >\n                                &gt;&gt;\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"content-container\">\n                    <div className=\"playlists\">\n                        <SpotifyGetPlaylists />\n                    </div>\n                    <div className=\"podcasts\">\n                        <SpotifyGetPodcasts />\n                    </div>\n\n                    <div className=\"podcasts\">\n                        <Playback />\n                    </div>\n\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WebPlayback\n","import React from 'react';\n\nfunction Login() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <a className=\"btn-spotify\" href=\"/auth/login\" >\n                    Login with Spotify \n                </a>\n            </header>\n        </div>\n    );\n}\n\nexport default Login;\n\n","import React, { useState, useEffect } from 'react';\nimport WebPlayback from './WebPlayback'\nimport Login from './Login'\nimport './App.css';\n\nfunction App() {\n\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n\n    async function getToken() {\n      const response = await fetch('/auth/token');\n      const json = await response.json();\n      setToken(json.access_token);\n    }\n\n    getToken();\n\n  }, []);\n\n  return (\n    <>\n        { (token === '') ? <Login/> : <WebPlayback token={token} /> }\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}